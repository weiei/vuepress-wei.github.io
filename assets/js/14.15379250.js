(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{581:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("相信很多人选择Spring Boot主要是考虑到它既能兼顾Spring的强大功能，还能实现快速开发的便捷。我们在Spring Boot使用过程中，最直观的感受就是没有了原来自己整合Spring应用时繁多的XML配置内容，替代它的是在"),a("code",[t._v("pom.xml")]),t._v("中引入模块化的"),a("code",[t._v("Starter POMs")]),t._v("，其中各个模块都有自己的默认配置，所以如果不是特殊应用场景，就只需要在"),a("code",[t._v("application.properties")]),t._v("中完成一些属性配置就能开启各模块的应用。")]),t._v(" "),a("p",[t._v("在之前的各篇文章中都有提及关于"),a("code",[t._v("application.properties")]),t._v("的使用，主要用来配置数据库连接、日志相关配置等。除了这些配置内容之外，本文将具体介绍一些在"),a("code",[t._v("application.properties")]),t._v("配置中的其他特性和使用方法。")]),t._v(" "),a("h2",{attrs:{id:"自定义属性与加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义属性与加载"}},[t._v("#")]),t._v(" 自定义属性与加载")]),t._v(" "),a("p",[t._v("我们在使用Spring Boot的时候，通常也需要定义一些自己使用的属性，我们可以如下方式直接定义：")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("com.didispace.blog.name=程序猿DD\ncom.didispace.blog.title=Spring Boot教程\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("然后通过"),a("code",[t._v('@Value("${属性名}")')]),t._v("注解来加载对应的配置属性，具体如下：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlogProperties")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${com.didispace.blog.name}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${com.didispace.blog.title}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 省略getter和setter")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("按照惯例，通过单元测试来验证BlogProperties中的属性是否已经根据配置文件加载了。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RunWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringJUnit4ClassRunner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringApplicationConfiguration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ApplicationTests")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlogProperties")]),t._v(" blogProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blogProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"程序猿DD"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blogProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTitle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Spring Boot教程"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h2",{attrs:{id:"参数间的引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数间的引用"}},[t._v("#")]),t._v(" 参数间的引用")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("application.properties")]),t._v("中的各个参数之间也可以直接引用来使用，就像下面的设置：")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("com.didispace.blog.name=程序猿DD\ncom.didispace.blog.title=Spring Boot教程\ncom.didispace.blog.desc=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("com.didispace.blog.name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("正在努力写《$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("com.didispace.blog.title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("》\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("code",[t._v("com.didispace.blog.desc")]),t._v("参数引用了上文中定义的"),a("code",[t._v("name")]),t._v("和"),a("code",[t._v("title")]),t._v("属性，最后该属性的值就是"),a("code",[t._v("程序猿DD正在努力写《Spring Boot教程》")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"使用随机数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用随机数"}},[t._v("#")]),t._v(" 使用随机数")]),t._v(" "),a("p",[t._v("在一些情况下，有些参数我们需要希望它不是一个固定的值，比如密钥、服务端口等。Spring Boot的属性配置文件中可以通过"),a("code",[t._v("${random}")]),t._v("来产生int值、long值或者string字符串，来支持属性的随机值。")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 随机字符串")]),t._v("\ncom.didispace.blog.value=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("random.value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 随机int")]),t._v("\ncom.didispace.blog.number=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("random.int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 随机long")]),t._v("\ncom.didispace.blog.bignumber=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("random.long"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 10以内的随机数")]),t._v("\ncom.didispace.blog.test1=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("random.int(10)"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 10-20的随机数")]),t._v("\ncom.didispace.blog.test2=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("random.int"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h2",{attrs:{id:"通过命令行设置属性值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过命令行设置属性值"}},[t._v("#")]),t._v(" 通过命令行设置属性值")]),t._v(" "),a("p",[t._v("相信使用过一段时间Spring Boot的用户，一定知道这条命令："),a("code",[t._v("java -jar xxx.jar --server.port=8888")]),t._v("，通过使用–server.port属性来设置xxx.jar应用的端口为8888。")]),t._v(" "),a("p",[t._v("在命令行运行时，连续的两个减号--就是对"),a("code",[t._v("application.properties")]),t._v("中的属性值进行赋值的标识。所以，"),a("code",[t._v("java -jar xxx.jar --server.port=8888")]),t._v("命令，等价于我们在"),a("code",[t._v("application.properties")]),t._v("中添加属性"),a("code",[t._v("server.port=8888")]),t._v("，该设置在样例工程中可见，读者可通过删除该值或使用命令行来设置该值来验证。")]),t._v(" "),a("p",[t._v("通过命令行来修改属性值固然提供了不错的便利性，但是通过命令行就能更改应用运行的参数，那岂不是很不安全？是的，所以Spring Boot也贴心的提供了屏蔽命令行访问属性的设置，只需要这句设置就能屏蔽："),a("code",[t._v("SpringApplication.setAddCommandLineProperties(false)")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"多环境配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多环境配置"}},[t._v("#")]),t._v(" 多环境配置")]),t._v(" "),a("p",[t._v("我们在开发Spring Boot应用时，通常同一套程序会被应用和安装到几个不同的环境，比如：开发、测试、生产等。其中每个环境的数据库地址、服务器端口等等配置都会不同，如果在为不同环境打包时都要频繁修改配置文件的话，那必将是个非常繁琐且容易发生错误的事。")]),t._v(" "),a("p",[t._v("对于多环境的配置，各种项目构建工具或是框架的基本思路是一致的，通过配置多份不同环境的配置文件，再通过打包命令指定需要打包的内容之后进行区分打包，Spring Boot也不例外，或者说更加简单。")]),t._v(" "),a("p",[t._v("在Spring Boot中多环境配置文件名需要满足"),a("code",[t._v("application-{profile}.properties")]),t._v("的格式，其中"),a("code",[t._v("{profile}")]),t._v("对应你的环境标识，比如：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("application-dev.properties")]),t._v("：开发环境")]),t._v(" "),a("li",[a("code",[t._v("application-test.properties")]),t._v("：测试环境")]),t._v(" "),a("li",[a("code",[t._v("application-prod.properties")]),t._v("：生产环境")])]),t._v(" "),a("p",[t._v("至于哪个具体的配置文件会被加载，需要在"),a("code",[t._v("application.properties")]),t._v("文件中通过"),a("code",[t._v("spring.profiles.active")]),t._v("属性来设置，其值对应"),a("code",[t._v("{profile}")]),t._v("值。")]),t._v(" "),a("p",[t._v("如："),a("code",[t._v("spring.profiles.active=test")]),t._v("就会加载"),a("code",[t._v("application-test.properties")]),t._v("配置文件内容")]),t._v(" "),a("p",[t._v("下面，以不同环境配置不同的服务端口为例，进行样例实验。")]),t._v(" "),a("ul",[a("li",[t._v("针对各环境新建不同的配置文件"),a("code",[t._v("application-dev.properties")]),t._v("、"),a("code",[t._v("application-test.properties")]),t._v("、"),a("code",[t._v("application-prod.properties")])]),t._v(" "),a("li",[t._v("在这三个文件均都设置不同的"),a("code",[t._v("server.port")]),t._v("属性，如：dev环境设置为1111，test环境设置为2222，prod环境设置为3333")]),t._v(" "),a("li",[a("code",[t._v("application.properties")]),t._v("中设置"),a("code",[t._v("spring.profiles.active=dev")]),t._v("，就是说默认以dev环境设置")]),t._v(" "),a("li",[t._v("测试不同配置的加载\n"),a("ul",[a("li",[t._v("执行"),a("code",[t._v("java -jar xxx.jar")]),t._v("，可以观察到服务端口被设置为"),a("code",[t._v("1111")]),t._v("，也就是默认的开发环境（dev）")]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("java -jar xxx.jar --spring.profiles.active=test")]),t._v("，可以观察到服务端口被设置为"),a("code",[t._v("2222")]),t._v("，也就是测试环境的配置（test）")]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("java -jar xxx.jar --spring.profiles.active=prod")]),t._v("，可以观察到服务端口被设置为"),a("code",[t._v("3333")]),t._v("，也就是生产环境的配置（prod）")])])])]),t._v(" "),a("p",[t._v("按照上面的实验，可以如下总结多环境的配置思路：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("application.properties")]),t._v("中配置通用内容，并设置"),a("code",[t._v("spring.profiles.active=dev")]),t._v("，以开发环境为默认配置")]),t._v(" "),a("li",[a("code",[t._v("application-{profile}.properties")]),t._v("中配置各个环境不同的内容")]),t._v(" "),a("li",[t._v("通过命令行方式去激活不同环境的配置")])]),t._v(" "),a("h2",{attrs:{id:"代码示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码示例"}},[t._v("#")]),t._v(" 代码示例")]),t._v(" "),a("p",[t._v("可以查看下面仓库中的"),a("code",[t._v("chapter2-1-1")]),t._v("目录：")]),t._v(" "),a("ul",[a("li",[t._v("Github："),a("a",{attrs:{href:"https://github.com/dyc87112/SpringBoot-Learning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/dyc87112/SpringBoot-Learning"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("Gitee："),a("a",{attrs:{href:"https://gitee.com/didispace/SpringBoot-Learning",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gitee.com/didispace/SpringBoot-Learning"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);